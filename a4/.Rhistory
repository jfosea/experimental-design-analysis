gender <- c(2, 1, 1, 2, 0, 1, 1)
recode <- c(male = 1, female = 2)
gender <- factor(gender, levels = recode, labels = names(recode))
SSFactorA <- 2227.458
SSFactorB <- 3996.083
SSTlec <- 7187.958
SSElec <- 507.5
SSAB
df <- 3*3
1-pf(MSAB, 3,3)
MSAB <- SSAB / df
SSAB <- SSTlec - SSFactorA - SSFactorB - SSElec
MSAB <- SSAB / df
1-pf(MSAB, 3,3)
df <- 3*2
MSAB <- SSAB / df
1-pf(MSAB, 3,3)
SSE <- 456.917
dfmse <- 6
MSE <- SSE/dfmse
MSAB/MSE
stabilizetime = c(18, 16, 15, 16, 24, 28, 31, 35, 33, 30, 42, 46, 22, 27, 24, 21, 40, 37, 39, 36, 35, 38, 52, 57, 15, 12, 10, 16, 28, 24)
emercond = c(rep("1", 6), rep("2", 6), rep("3", 6), rep("4", 6), rep("5", 6))
dashboardtype = rep(c("A", "A", "B", "B", "C", "C"), 5)
airtraffic.df = data.frame(emercond, dashboardtype, stabilizetime)
airtraffic.df
library(ggplot2)
library(mosaic)
library(EnvStats)
library(lawstat)
library(DescTools)
library(lme4)
pestvar.aov = aov(stabilizetime ~ dashboardtype + emercond + dashboardtype:emercond, data=airtraffic.df) #the interaction term is specified by pest:variety
#also, bushelstree ~ pest*variety will work
pestvar.aov
#also, bushelstree ~ pest*variety will work
summary(pestvar.aov)
interaction.plot(x.factor = dashboardtype, trace.factor = emercond, response=stabilizetime, fun=mean, col=c("orange", "green", "blue"), xlab="dashboard Type", ylab="Mean stabilize time per dashboard", main="Interaction Plot")
interaction.plot(x.factor = emercond, trace.factor = dashboardtype, response=stabilizetime, fun=mean, col=c("orange", "green", "blue"), xlab="dashboard Type", ylab="Mean stabilize time per dashboard", main="Interaction Plot")
#also, bushelstree ~ pest*variety will work
summary(pestvar.aov)
MSAB <- 6.1
F.int <- MSAB/MSE
#also, bushelstree ~ pest*variety will work
summary(pestvar.aov)
1-pf(F.int, 8, 15)
# 4
pestvar.aov = aov(stabilizetime ~ dashboardtype + emercond + dashboardtype:emercond, data=airtraffic.df)
# 4
stabilize.aov = aov(stabilizetime ~ dashboardtype + emercond, data=airtraffic.df)
summary(stabilize.aov)
#also, bushelstree ~ pest*variety will work
summary(pestvar.aov)
summary(stabilize.aov)
TukeyHSD(stabilize.aov, ordered= T)
mplot(a)
# 5
a <- PostHocTest(stabilize.aov, ordered = T)
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd)
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd')
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd')
mplot(a)
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd')
library(ggplot2)
library(mosaic)
library(EnvStats)
library(lawstat)
library(DescTools)
library(lme4)
stabilizetime = c(18, 16, 15, 16, 24, 28, 31, 35, 33, 30, 42, 46, 22, 27, 24, 21, 40, 37, 39, 36, 35, 38, 52, 57, 15, 12, 10, 16, 28, 24)
emercond = c(rep("1", 6), rep("2", 6), rep("3", 6), rep("4", 6), rep("5", 6))
dashboardtype = rep(c("A", "A", "B", "B", "C", "C"), 5)
airtraffic.df = data.frame(emercond, dashboardtype, stabilizetime)
airtraffic.df
pestvar.aov = aov(stabilizetime ~ dashboardtype + emercond + dashboardtype:emercond, data=airtraffic.df) #the interaction term is specified by pest:variety
#also, bushelstree ~ pest*variety will work
summary(pestvar.aov)
# 1
0.554 # pvalue
# 2
interaction.plot(x.factor = emercond, trace.factor = dashboardtype, response=stabilizetime, fun=mean, col=c("orange", "green", "blue"), xlab="dashboard Type", ylab="Mean stabilize time per dashboard", main="Interaction Plot")
# 3
0.554 # pvalue
# 4
stabilize.aov = aov(stabilizetime ~ dashboardtype + emercond, data=airtraffic.df)
summary(stabilize.aov)
# emergency condition effect: Yes, pvalue = 2.10e-14
# dashboard effect: Yes, pvalue = 1.39e-11
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd')
mplot(a)
stabilizetime = c(18, 16, 15, 16, 24, 28, 31, 35, 33, 30, 42, 46, 22, 27, 24, 21, 40, 37, 39, 36, 35, 38, 52, 57, 15, 12, 10, 16, 28, 24)
emercond = c(rep("1", 6), rep("2", 6), rep("3", 6), rep("4", 6), rep("5", 6))
dashboardtype = rep(c("A", "A", "B", "B", "C", "C"), 5)
airtraffic.df = data.frame(emercond, dashboardtype, stabilizetime)
airtraffic.df
pestvar.aov = aov(stabilizetime ~ dashboardtype + emercond + dashboardtype:emercond, data=airtraffic.df) #the interaction term is specified by pest:variety
#also, bushelstree ~ pest*variety will work
summary(pestvar.aov)
# 1
0.554 # pvalue
# 2
interaction.plot(x.factor = emercond, trace.factor = dashboardtype, response=stabilizetime, fun=mean, col=c("orange", "green", "blue"), xlab="dashboard Type", ylab="Mean stabilize time per dashboard", main="Interaction Plot")
# 3
0.554 # pvalue
# 4
stabilize.aov = aov(stabilizetime ~ dashboardtype + emercond, data=airtraffic.df)
summary(stabilize.aov)
# emergency condition effect: Yes, pvalue = 2.10e-14
# dashboard effect: Yes, pvalue = 1.39e-11
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd')
mplot(a)
mplot(a)
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd')
a
# 4
stabilize.aov = aov(stabilizetime ~ dashboardtype + emercond, data=airtraffic.df)
summary(stabilize.aov)
# 5
a <- PostHocTest(stabilize.aov, ordered = T, method='hsd')
mplot(a)
b <-TukeyHSD(stabilize.aov, ordered=T)
mplot(a)
a
b
a
summary(stabilize.aov)
b
1-pbinom(1,0.018638,49)
1-pbinom(1,49, 0.018638)
1-pbinom(0,49, 0.018638)
sum(dbinom(1:.49,0.018638))
sum(dbinom(1:,49,0.018638))
sum(dbinom(1:49,49,0.018638))
sum(dbinom(0:1,49,0.018638))
sum(dbinom(3:7,49,0.018638))
dpois(0,2.7)
1-ppois(0,2.7)
1-dpois(0,2.7)
dpois(1,2.7)/(ppois(3,2.7))
pexp
qexp(0.15, 0.25)
qexp(0.15, rate = 1/4, lower.tail = TRUE, log.p = FALSE)
plot(qexp(0.15, rate = 1/4, lower.tail = TRUE, log.p = FALSE))
library(mosaic)
qnorm(0.32, mean = 0.66, sd = 0.07, lower.tail = TRUE, log.p = FALSE)
1-0.32
qnorm(0.66, mean = 0.66, sd = 0.07, lower.tail = FALSE, log.p = FALSE)
pexp(45, 45)
qexp(45, 45)
qexp(0.45, rate = 45, lower.tail = TRUE, log.p = FALSE)
qexp(0.45, rate = 1/45, lower.tail = TRUE, log.p = FALSE)
qnorm(0.7, mean = 0.60, sd = 0.12, lower.tail = FALSE, log.p = FALSE)
qnorm(0.07, mean = 0.60, sd = 0.12, lower.tail = FALSE, log.p = FALSE)
qnorm(0.07, mean = 0.60, sd = 0.12, lower.tail = FALSE, log.p = FALSE)
qnorm(0.07, mean = 0.60, sd = 0.12, lower.tail = FALSE)
dbinom(6, 29, 0.6)
dbinom(6, 29, 0.7967)
dbinom(6, 29, 1-0.7967)
pnorm(0.5, 0.60, 0.12)
dbinom(6, 29, 0.2023284)
qnorm(0.2, mean = 4.15, sd = 0.71, lower.tail = TRUE)
pnorm(4.15, 4.15, 0.71)
choose(16, 7) * 0.5^8 *0.5^9
# (a)
windows()
PREP <- p4$PREP
RATING <- p4$RATING
STANDING <- p4$STANDING
interaction.plot(x.factor = PREP,
trace.factor = STANDING,
response=RATING,
fun=mean,
col=c("orange", "green", "blue"),
xlab="Pesticide Type",
ylab="Mean Bushels per Tree",
main="Interaction Plot", lwd=2)
PREP <- p4$PREP
p4 <- read.csv("p4.csv")
library(ggplot2)
library(mosaic)
library(dplyr)
library(EnvStats)
library(lawstat)
library(DescTools)
library(ggpubr)
setwd("C:\\Users\\surfacepro\\Desktop\\a4")
p4 <- read.csv("p4.csv")
PREP <- p4$PREP
RATING <- p4$RATING
STANDING <- p4$STANDING
interaction.plot(x.factor = PREP,
trace.factor = STANDING,
response=RATING,
fun=mean,
col=c("orange", "green", "blue"),
xlab="Pesticide Type",
ylab="Mean Bushels per Tree",
main="Interaction Plot", lwd=2)
interaction.plot(x.factor = PREP,
trace.factor = STANDING,
response=RATING,
fun=mean,
col=c("orange", "green", "blue"),
xlab="Pesticide Type",
ylab="Mean Bushels per Tree",
main="Interaction Plot", lwd=2)
# (b)
aov(RATING|PREP*STANDING, data=p4)
# (b)
aov(RATING~PREP*STANDING, data=p4)
# (b)
p4.aov <- aov(RATING~PREP*STANDING, data=p4)
summary(p4.aov)
summary(p4.aov)
residuals)p4.aov)
residuals(p4.aov)
fitted(p4.aov)
ggplot(data=pestdiag.df, aes(sample = eijl.pest)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
interaction.plot(x.factor = PREP,
trace.factor = STANDING,
response=RATING,
fun=mean,
col=c("orange", "green", "blue"),
xlab="PREP",
ylab="Mean Final Prep Rate",
main="Interaction Plot", lwd=2)
windows()
windows()
interaction.plot(x.factor = PREP,
trace.factor = STANDING,
response=RATING,
fun=mean,
col=c("orange", "green", "blue"),
xlab="PREP",
ylab="Mean Final Prep Rate",
main="Interaction Plot", lwd=2)
windows()
interaction.plot(x.factor = PREP,
trace.factor = STANDING,
response=RATING,
fun=mean,
col=c("orange", "green", "blue"),
xlab="PREP",
ylab="Mean Final Prep Rate",
main="Interaction Plot", lwd=2)
windows()
interaction.plot(x.factor = PREP,
trace.factor = STANDING,
response=RATING,
fun=mean,
col=c("orange", "green", "blue"),
xlab="PREP",
ylab="Mean Final Prep Rate",
main="Interaction Plot", lwd=2)
residuals(p4.aov)
fitted(p4.aov)
residuals <- residuals(p4.aov)
fitted <- fitted(p4.aov)
p4.diag <- data.frame(residuals, fitted)
ggplot(data=p4.diag, aes(sample = residuals))
# (c)
windows()
# (c)
windows()
ggplot(data=p4.diag, aes(sample = residuals))
ggplot(data=p4.diag, aes(sample = residuals))
ggplot(data=p4.diag, aes(sample = residuals))
+ stat_qq(size=2, col="blue")
+ stat_qqline(col="red")
+ ggtitle("Normal Probability Plot of the Residuals")
ggplot(data=p4.diag, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
# (c)
windows()
ggplot(data=p4.diag, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
shapiro.test(p4.diag$residuals)
favstats()
favstats(RATING~STANDING)
favstats(RATING~PREP)
c(rep(4.909091, 4), rep(4.909091, 44), rep(4.159091, 44))
favstats(RATING~STANDING)
favstats(RATING~PREP)
standing.means <- c(rep(4.909091, 4), rep(4.909091, 44), rep(4.159091, 44))
prep.means <- c(rep(5.303030, 66), rep(4.015152, 66))
p4.diag <- data.frame(p4.diag, standing.means, prep.means)
p4.diag <- data.frame(residuals, fitted, RATING)
p4.diag
p4.diag <- data.frame(residuals, fitted, RATING, PREP, STANDING)
p4.diag
favstats(RATING~PREP, data=p4.diag)
favstats(RATING~STANDING, data=p4.diag)
prep.means <- c(rep(5.303030, 66), rep(4.015152, 66))
standing.means <- c(rep(4.909091, 4), rep(4.909091, 44), rep(4.159091, 44))
p4.diag <- data.frame(residuals, fitted, RATING, PREP, STANDING, standing.means, prep.means)
standing.means <- c(rep(4.909091, 44), rep(4.909091, 44), rep(4.159091, 44))
prep.means <- c(rep(5.303030, 66), rep(4.015152, 66))
p4.diag <- data.frame(residuals, fitted, RATING, PREP, STANDING, standing.means, prep.means)
ggplot(data=pestdiag2.df, aes(x = standing.means, y = residuals)) + geom_point(size=2, col="blue") + xlab("Means Response of Rating") + ylab("Residuals") + ggtitle("Plot of Residuals to Standing Level Means") + geom_hline(yintercept=0, linetype="dashed", col="red")
ggplot(data=p4.diag, aes(x = standing.means, y = residuals)) + geom_point(size=2, col="blue") + xlab("Means Response of Rating") + ylab("Residuals") + ggtitle("Plot of Residuals to Standing Level Means") + geom_hline(yintercept=0, linetype="dashed", col="red")
ggplot(data=p4.diag, aes(x = prep.means, y = residuals)) + geom_point(size=2, col="blue") + xlab("Means Response of Rating") + ylab("Residuals") + ggtitle("Plot of Residuals to Prep Level Means") + geom_hline(yintercept=0, linetype="dashed", col="red")
# (a)
p5 <- read.csv("p5.csv")
p5
stack(p5)
# (a)
p5 <- read.csv("p5.csv", header=TRUE)
stack(p5)
p5
p5$ï..
rep(p5$ï..,3)
data.frame(rate=stack(p5), city=rep(p5$ï..,3))
data.frame(rate=stack(p5), city=rep(p5$ï..,3))
data.frame(c(rate, hotel)=stack(p5), city=rep(p5$ï..,3))
names(p5.1) <- c("rate", "hotel", "city")
p5.1 <- data.frame(stack(p5), rep(p5$ï..,3))
names(p5.1) <- c("rate", "hotel", "city")
p5.1
aov(rate~hotel*city, p5.1)
summary(aov(rate~hotel*city, p5.1))
summary(aov(rate~hotel+city, p5.1))
p5.aov <- aov(rate~hotel+city, p5.1
p5.aov <- aov(rate~hotel+city, p5.1)
summary(p5.aov)
summary(p5.aov)
p5.aov <- aov(rate~hotel+city, p5.1)
summary(p5.aov)
p5.aov <- aov(rate~hotel+city, p5.1)
summary(p5.aov)
residuals <- residuals(p5.aov)
p5$residuals <- residuals(p5.aov)
p5.1$residuals <- residuals(p5.aov)
p5.1$fitted <- fitted(p5.aov)
ggplot(data=p5.1, aes(x = fitted, y = residuals)) + geom_point(size=2, col="blue") + xlab("Means Response of Rating") + ylab("Residuals") + ggtitle("Plot of Residuals to Prep Level Means") + geom_hline(yintercept=0, linetype="dashed", col="red")
shapiro.test(p5.1$residuals)
ggplot(data=p5.1, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
ggplot(data=p5.1, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
# (c)
p5.aov <- aov(rate~hotel+city, p5.1)
summary(p5.aov)
# (a)
p6 <- read.csv("p6.csv")
p6
# (a)
p6 <- read.csv("p6.csv", header=TRUE)
stack(p6)
p6$C1.T
rep(p6$C1.T, 3)
p6.1 <- data.frame(stack(p6), rep(p6$C1.T, 3))
names(p6.1) <- c("cost", "city", "shop_type")
p5.1
p6.1
class(p6.1$)
class(p6.1$shop_type)
p6.1.aov <- aov(cost ~ city + shop_type + city:shop_type, data=pedcity.df)
p6.1.aov
p6.1.aov <- aov(cost ~ city + shop_type + city:shop_type, data=p6.1.aov)
p6.1.aov <- aov(cost ~ city + shop_type + city:shop_type, data=p6.1)
p6.1.aov
p6.1.aov <- aov(cost ~ city + shop_type + city:shop_type, data=p6.1)
p6.1.aov
summary(p6.1.aov)
p6.1.aov <- aov(city*shop_type, data=p6.1)
summary(p6.1.aov)
p6.1$residuals <- residuals(p6.1)
p6.1$residuals <- residuals(p6.1.aov
p6.1$residuals <- residuals(p6.1.aov
p6.1$residuals <- residuals(p6.1.aov)
ggplot(data=p6.1, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
shapiro.test(p5.1$residuals)
ggplot(data=p6.1, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
ggplot(data=p6.1, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
ggplot(data=p6.1, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
p6.1.aov <- aov(rate~city*shop_type, data=p6.1)
summary(p6.1.aov)
p6.1$residuals <- residuals(p6.1.aov)
ggplot(data=p6.1, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of the Residuals")
shapiro.test(p6.1$residuals)
summary(p6.1.aov)
summary(p6.1.aov)
p5 <- read.csv("p5.csv", header=TRUE)
p5.1 <- data.frame(stack(p5), rep(p5$ï..,3))
p6 <- read.csv("p6.csv", header=TRUE)
msb / msab
msab <- 1.787
mse <- 11.213
msa <- 0.720
msb <- 15.563
msb / msab
msa / msab
msshop <- 0.720
mscity <- 15.563
mscity / msab
msshop / msab
summary(p6.1.aov)
interaction.plot(x.factor = city,
trace.factor = shop_type,
response=cost,
fun=mean,
col=c("orange", "green", "blue"),
xlab="Pesticide Type",
ylab="Mean Bushels per Tree",
main="Interaction Plot", lwd=2)
interaction.plot(x.factor = city,
trace.factor = shop_type,
response=cost,
fun=mean,
col=c("orange", "green", "blue"),
xlab="Pesticide Type",
ylab="Mean Bushels per Tree",
main="Interaction Plot", lwd=2)
interaction.plot(x.factor = p6.1$city,
trace.factor = p6.1$shop_type,
response=p6.1$cost,
fun=mean,
col=c("orange", "green", "blue"),
xlab="Pesticide Type",
ylab="Mean Bushels per Tree",
main="Interaction Plot", lwd=2)
summary(p6.1.aov)
# (B)
summary(p6.1.aov)
p6.1.aov
p6.1.aov
p6.1
summary(p6.1.aov)
# (C)
msshop/msab
# (C)
fobs <- msshop/msab
1-pf(fobs, 1, 2)
c(fobs, pval)
pval <- 1-pf(fobs, 1, 2)
c(fobs, pval)
pval <- 1-pf(fobs, 1, 12)
c(fobs, pval)
# (d)
fobs <- mscity/msab
pval <- 1-pf(fobs, 1, 12)
pval <- 1-pf(fobs, 1, 2)
c(fobs, pval)
# (d)
fobs <- mscity/msab
pval <- 1-pf(fobs, 2, 2)
c(fobs, pval)
fobs <- msshop/msab
pval <- 1-pf(fobs, 1, 2)
c(fobs, pval)
fobs <- mscity/msab
pval <- 1-pf(fobs, 2, 2)
c(fobs, pval)
p7 <- read.csv("p7.csv")
p7
p7 <- aov(Price~Store+Item, data=p7)
p7 <- read.csv("p7.csv")
p7.aov <- aov(Price~Store+Item, data=p7)
summary(p7.aov)
summary(p7.aov)
p7.Tukey = TukeyHSD(p7.aov, conf.level=0.95, ordered=T)
p7.Tukey$store
p7.Tukey = TukeyHSD(p7.aov, conf.level=0.95, ordered=T)
p7.Tukey$store
mplot(p1.Tukey)
p7.Tukey = TukeyHSD(p7.aov, conf.level=0.95, ordered=T)
p7 <- read.csv("p7.csv")
p7.aov <- aov(Price~Store+Item, data=p7)
p7.Tukey = TukeyHSD(p7.aov, conf.level=0.95, ordered=T)
p7.Tukey$store
p7.Tukey$Store
mplot(p1.Tukey)
mplot(p7.Tukey)
p7.Tukey$Store
p7.Tukey = TukeyHSD(p7.aov, conf.level=0.90, ordered=T)
p7.Tukey$Store
p7.Tukey = TukeyHSD(p7.aov, conf.level=0.95, ordered=T)
e.terms = residuals(p7.aov)
fit.terms = fitted(p7.aov)
e.terms = residuals(p7.aov)
fit.terms = fitted(p7.aov)
ggplot(data=p7.aov, aes(sample = e.terms)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of Residuals")
p7$residuals = residuals(p7.aov)
p7$fitted = fitted(p7.aov)
p7$residuals
ggplot(data=p7, aes(sample = residuals)) + stat_qq(size=2, col="blue") + stat_qqline(col="red") + ggtitle("Normal Probability Plot of Residuals")
shapiro.test(p7$residuals)
favstats(Cost~Item, data=p7)
favstats(Cost~Store, data=p7)
p7
favstats(Price~Store, data=p7)
favstats(Price~Item, data=p7)
favstats(Price~Store, data=p7)
p1.Tukey = TukeyHSD(p1.aov, conf.level=0.95, ordered=T)
km <- c(0.74, 0.72, 0.57, 0.62,
0.61, 0.76, 0.74, 0.58,
0.54, 0.60, 0.71, 0.70,
0.71, 0.56, 0.60, 0.74)
driver <- rep(c("1", "2", "3", "4"), 4)
car <- c(rep(c("1"), 4), rep(c("2"), 4), rep(c("3"), 4), rep(c("4"), 4))
brand <- c("A", "B", "C", "D",
"D", "A", "B", "C",
"C", "D", "A", "B",
"B", "C", "D", "A")
p1 <- data.frame(km, driver, car, brand)
p1.aov = aov(km ~ brand + driver + car, data=p1)
summary(p1.aov)
p1.Tukey = TukeyHSD(p1.aov, conf.level=0.95, ordered=T)
p1.Tukey$brand
